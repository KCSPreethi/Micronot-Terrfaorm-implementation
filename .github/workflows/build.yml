# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Test Build Deploy

on:
  push:
    branches: [ "preethi" ]
  pull_request:
    branches: [ "preethi" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Test
        run: ./gradlew test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build
        run: ./gradlew build
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esop-trading-1.0
          path: build/libs/esop-0.1-all.jar
      - name: Terraform Pipeline

        on:
          push:
            branches: [ "preethi" ]

        permissions:
          contents: read

        jobs:
          terraform:
            name: "Terraform read t"
            env:
              TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
              TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            runs-on: ubuntu-latest
            environment: dev
            defaults:
              run:
                shell: bash

            steps:
              - name: Checkout
                uses: actions/checkout@v3

              - name: Terraform Init
                run: terraform init

              - name: Terraform Plan
                run: terraform plan

              - name: Terraform Apply
                run: terraform apply -auto-approve -input=false


