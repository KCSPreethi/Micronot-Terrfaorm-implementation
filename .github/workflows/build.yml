name: Test Build Deploy

on:
  push:
    branches: [ "preethi" ]
  pull_request:
    branches: [ "preethi" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Test
        run: ./gradlew test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build
        run: ./gradlew build
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esop-trading-0.1-all
          path: build/libs/esop_trading_platform-0.1-all.jar

  terraform:
    name: "Terraform Pipeline"
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    runs-on: ubuntu-latest
    outputs:
      public_ip: ${{ steps.terraform_output.outputs.public_ip }}

    environment: dev
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.2.0"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Plan
        run: terraform plan


      - name: Terraform Apply final
        run: terraform apply -auto-approve -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Terraform Output
        id: terraform_output
        run:
          echo public_ip=$(terraform output instance_public_ip) | tr -d '"' >> $GITHUB_OUTPUT

  deploy:
    name: "Deploying application"
    runs-on: ubuntu-latest
    needs:
      - terraform
      - build
      - test
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Download jar file
        uses: actions/download-artifact@v3
        with:
          name: esop-trading-0.1-all
      - name: Copy jar file to ec2 instance
        env:
            SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
            SSH_HOST: ${{ needs.terraform.outputs.public_ip }}
        run: |
          eval `ssh-agent`
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          
         
          echo "Killing any process running on port 8080"
          echo "Checking if any process is running on port 8080"
          if ssh -T -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "lsof -i :8080 > /dev/null 2>&1"; then
          echo "Killing any process running on port 8080"
          ssh -T -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "lsof -i tcp:8080 | awk '/8080/{print \$2}' | xargs kill -9"
          fi
      
          
          echo "Copying the jar file to the remote server"
          scp -T -o StrictHostKeyChecking=no "esop_trading_platform-0.1-all.jar" ec2-user@$SSH_HOST:~
          
        
          echo "Installing Java and running the jar file"
          ssh -T -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "curl -s 'https://get.sdkman.io' | bash"
        
          ssh -T -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "source ~/.sdkman/bin/sdkman-init.sh && sdk install java 17.0.6-amzn"
          ssh -T -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "java -jar esop-trading-0.1-all.jar > /dev/null &"
          
